MenuLink support nesting, component specifided by lambda expression, etc:
    ✔ When group active if has active child @done(21-03-10 21:20)
    When item active:
    ✔ If componet has component with exec_name on page @done(21-03-10 21:19)
    ✔ If not component when url.pathname === location.pathname @done(21-03-10 21:19)
    ✔ active is determinet with jmb-on events in html not on server @done(21-03-10 21:19)
    -- just code don't need to test it
    Think about how to handle icons:
        ☐ Support only svg icons
        ☐ svg iccons needs to be able to change class atributed by menu template
        ☐ no need to support font icons (let dev just use svg)
Handle no network or network error:
    ✔ client raise event jembePageUpdateError @done(21-03-11 00:13)
    ✔ Default handler just print it at console @done(21-03-11 00:13)
    ✔ Page html adds on event handler and displays modal modal has jmb-ignore attribute to be ignored by merge @done(21-03-11 00:13)
✔ Show spinner when processing x-jembe request (non blocking or blocking?) @done(21-03-15 15:48)
✔ Block inputs and buttons on when progress indicator is displayed @done(21-03-15 18:01)
✘ Use line progress indicator bellow main menu and shade whole app @cancelled(21-03-15 16:48)
✔ set delly on displaying progress indicator to stop screen flickering (on fast net) @done(21-03-15 16:48)
✔ Local blocks and progress indicators leave for jembe 2.0 @done(21-03-15 15:49)
✘ Disable inputs when sending requests and display spinner (chose should spiner is display localy or globaly)?? @cancelled(21-03-15 15:49)
✔ Focus disabled button inside morphed compoenent afeter x-jembe request @done(21-03-15 21:08)
✔ Pagination not working as espected try with filter "aa" @done(21-03-15 21:13)
✔ Add ActionLInk and Link and test it @done(21-03-17 12:26)
✘ Refactor lambda self: self.compoent('view', record_id=1).print_pdf() and similar to work for ActionLink (jrl) @cancelled(21-03-17 12:32)
✔ Add user list @done(21-03-17 13:18)
✔ Add group new action (create) @done(21-03-24 13:18)
Make wtforms better for me:
    ✘ Remove usage of wtforms-sqlalchemy @cancelled(21-03-30 12:32)
    ✘ Create SaField(Field) which will automaticly set validators, field type, widget etc from actual db field name = SaField(Group.name) @cancelled(21-03-30 12:32)
    ✘ Use wff-sqlalchemy convertor code as reference when inplementing @cancelled(21-03-30 12:32)
    ✘ Dont use model_form insteand create every form manualy and explicitly. I don't want to putt editable false on Model. @cancelled(21-03-30 12:32)
✔ Add user create action @done(21-03-30 12:33)
✔ Use raw wtforms @done(21-03-30 12:33)
✔ Read form should not be editable @done(21-04-05 12:15)
✔ Add edit component @done(21-04-14 12:39)
✔ When click on groups in menu dont reset pagination just display mode if groups is active @done(21-04-19 18:10)
✔ FIx inject_into component method to work @done(21-04-20 16:24)
✘ Delete event stop propagation on down @cancelled(21-04-20 16:30)
✔ Add delete component @done(21-04-19 22:38)
✔ Store session to db or memcached @done(21-04-21 15:02)

☐ Is action accessible:
    ☐ if trying to call not accessible action in javascript display error
    ✔ if not accessible action is called in python raise exception NotFound @done(21-05-07 14:09)
    ✔ allow _exception listener to distignush action not accessible errors @done(21-05-07 14:09)
    ✔ allow component to listen for its own action not accessible errors and decide what to do @done(21-05-07 14:09)
    ✔ add allow and deny methods in component that should be used only in init @done(21-05-07 14:09)
    ✘ if allow or deny are used outside __init__ raise JembeError @cancelled(21-05-07 14:08)
    allow deny:
        ✔ allow('action_name') alows action to be executed @done(21-05-07 14:04)
        ✔ deny('action_name') denies action to be executed @done(21-05-07 14:04)
        ✔ allow and deny are comulative @done(21-05-07 14:04)
            self.allow('action1')
            self.deny('action2')
        ✔ allow without params allows all actions excluding display @done(21-05-07 14:04)
        ✔ deny without params denyes all actions including display @done(21-05-07 14:04)
        ✔ allow('display') and deny('display') are valid @done(21-05-07 14:07)
        ✔ if 'display' is denied component is not accessible at all @done(21-05-07 14:08)
        ✔ all actions are send to client with list of denied actions @done(21-05-07 21:38)
        ☐ client before executing action check if action is denied and if it is call hook to handle it or call backend with denied action and excepting that backend handle it properlly
        ✘ if list of denied actions are changed component is redisplayed (efectivly making list of denied actions state variable) @cancelled(21-05-07 14:49)
            No need for this. Action can be denied in display or mount so there is no point to check it after init.
            Forcing all ac_allow deny in init can make init to havy

✔ Checking if compoennt or actions is accessible must be repeted if component state is changed @done(21-05-11 00:29)
    ✘ ac_allow(action, condition=True) shuld add rules in compoennt ac_rules to be checked when ever compoennt state is changed @cancelled(21-05-11 00:30)
    ✘ if component ac depends on logged in user user must be part of state parameters and can be injected into @cancelled(21-05-11 00:30)
    ✔ changing state param of one component recalculates states of all other compoments (runs their inits) @done(21-05-11 00:30)
    ✔ inject is called @done(21-05-11 00:30)
✔ ActionLink to action simplified @done(21-05-11 00:30)
☐ Support login/logout 
☐ Support change password
☐ Add user profile with photo
☐ Support protection resources to only loggedin users
        ☐ Add ac_child_deny and ac_child_allow for accessing subcomponents
☐ Add bulk delete component
☐ Add prev next navigation on read component
☐ Add bread crumb to return to groups
✔ Add group view, edit and delete action @done(21-04-19 22:39)
✔ Create user, user profile and group models @done(21-05-11 00:34)
☐ Create action flow 
✔ Create PageComponent with notifications menues and etc. @done(21-03-25 02:19)
☐ Page component should suport PComonents 